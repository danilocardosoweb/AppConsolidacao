import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { ArrowLeft, Users, UserCheck, Calendar, TrendingUp, Plus, Search, Filter, Settings, Download, FileText } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';
import { supabase } from '@/integrations/supabase/client';
import StatsCard from './StatsCard';
import VisitorTable, { Visitor } from './VisitorTable';

interface DashboardProps {
  onNavigate: (view: string) => void;
}

const Dashboard: React.FC<DashboardProps> = ({ onNavigate }) => {
  const [searchTerm, setSearchTerm] = useState('');
  const { toast } = useToast();
  const navigate = useNavigate();

  // Função para visualizar os detalhes de um visitante
  const handleViewVisitor = (visitor: Visitor) => {
    // Navega para a página de visualização do visitante
    onNavigate(`visitor/${visitor.id}`);
  };

  // Função para editar um visitante
  const handleEditVisitor = (visitor: Visitor) => {
    // Navega para a página de edição do visitante
    onNavigate(`edit-visitor/${visitor.id}`);
  };

  // Função para excluir um visitante
  const handleDeleteVisitor = async (visitor: Visitor) => {
    try {
      const { error } = await supabase
        .from('visitors')
        .delete()
        .eq('id', visitor.id);

      if (error) throw error;

      toast({
        title: "Sucesso",
        description: "Visitante excluído com sucesso!",
      });

      // Recarrega a página para atualizar a lista
      window.location.reload();
    } catch (error) {
      console.error('Erro ao excluir visitante:', error);
      toast({
        title: "Erro",
        description: "Ocorreu um erro ao excluir o visitante.",
        variant: "destructive",
      });
    }
  };

  // Mock data - em uma aplicação real, viria de uma API
  const stats = [
    {
      title: 'Total de Visitantes',
      value: '1,247',
      icon: Users,
      trend: '+12%',
      trendUp: true,
      color: 'from-blue-500 to-blue-600'
    },
    {
      title: 'Visitantes Hoje',
      value: '23',
      icon: UserCheck,
      trend: '+5%',
      trendUp: true,
      color: 'from-green-500 to-green-600'
    },
    {
      title: 'Este Mês',
      value: '189',
      icon: Calendar,
      trend: '+18%',
      trendUp: true,
      color: 'from-purple-500 to-purple-600'
    },
    {
      title: 'Crescimento',
      value: '+15%',
      icon: TrendingUp,
      trend: '+3%',
      trendUp: true,
      color: 'from-orange-500 to-orange-600'
    }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 to-blue-50">
      {/* Header */}
      <header className="bg-white shadow-sm border-b">
        <div className="px-6 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <button
                onClick={() => onNavigate('home')}
                className="p-2 hover:bg-gray-100 rounded-lg transition-colors"
              >
                <ArrowLeft className="w-5 h-5" />
              </button>
              <div>
                <h1 className="text-2xl font-playfair font-bold text-gray-900">Dashboard</h1>
                <p className="text-gray-600">Gerencie visitantes e visualize estatísticas</p>
              </div>
            </div>
            <div className="flex items-center space-x-3">
              <button
                onClick={() => onNavigate('monthly-report')}
                className="p-2 hover:bg-gray-100 rounded-lg transition-colors text-gray-600 hover:text-church-primary"
                title="Relatório Mensal"
              >
                <FileText className="w-5 h-5" />
              </button>
              <button
                onClick={() => onNavigate('export')}
                className="p-2 hover:bg-gray-100 rounded-lg transition-colors text-gray-600 hover:text-church-primary"
                title="Exportar Dados"
              >
                <Download className="w-5 h-5" />
              </button>
              <button
                onClick={() => onNavigate('settings')}
                className="p-2 hover:bg-gray-100 rounded-lg transition-colors text-gray-600 hover:text-church-primary"
              >
                <Settings className="w-5 h-5" />
              </button>
              <button
                onClick={() => onNavigate('register')}
                className="btn-church flex items-center space-x-2"
              >
                <Plus className="w-5 h-5" />
                <span>Novo Visitante</span>
              </button>
              <button
                onClick={() => onNavigate('cells-register')}
                className="btn-church flex items-center space-x-2"
              >
                <Plus className="w-5 h-5" />
                <span>Cadastrar Célula</span>
              </button>
            </div>
          </div>
        </div>
      </header>

      {/* Main Content */}
      <div className="p-6 space-y-8">
        {/* Stats Grid */}
        <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
          {stats.map((stat, index) => (
            <div key={stat.title} className="animate-scale-in" style={{ animationDelay: `${index * 100}ms` }}>
              <StatsCard {...stat} />
            </div>
          ))}
        </div>

        {/* Search and Filters */}
        <div className="bg-white rounded-2xl shadow-sm border p-6">
          <div className="flex flex-col md:flex-row gap-4 items-center justify-between mb-6">
            <h2 className="text-xl font-semibold text-gray-900">Lista de Visitantes</h2>
            <div className="flex flex-col sm:flex-row gap-3 w-full md:w-auto">
              <div className="relative">
                <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
                <input
                  type="text"
                  placeholder="Buscar visitantes..."
                  value={searchTerm}
                  onChange={(e) => setSearchTerm(e.target.value)}
                  className="pl-10 pr-4 py-2 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-church-primary/50 focus:border-church-primary w-full sm:w-64"
                />
              </div>
              <button className="flex items-center space-x-2 px-4 py-2 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
                <Filter className="w-4 h-4" />
                <span>Filtros</span>
              </button>
            </div>
          </div>

          {/* Visitors Table */}
          <VisitorTable 
            searchTerm={searchTerm} 
            onView={handleViewVisitor}
            onEdit={handleEditVisitor}
            onDelete={handleDeleteVisitor}
          />
        </div>

        {/* Quick Actions */}
        <div className="grid md:grid-cols-3 gap-6">
          <div 
            onClick={() => onNavigate('monthly-report')}
            className="bg-gradient-to-r from-church-primary to-church-secondary rounded-2xl p-6 text-white hover-lift cursor-pointer"
          >
            <h3 className="text-lg font-semibold mb-2">Relatório Mensal</h3>
            <p className="text-white/90 mb-4">Análises detalhadas com insights inteligentes</p>
            <button className="bg-white/20 px-4 py-2 rounded-lg hover:bg-white/30 transition-colors">
              Visualizar Relatório
            </button>
          </div>

          <div 
            onClick={() => onNavigate('export')}
            className="bg-gradient-to-r from-green-500 to-green-600 rounded-2xl p-6 text-white hover-lift cursor-pointer"
          >
            <h3 className="text-lg font-semibold mb-2">Exportar Dados</h3>
            <p className="text-white/90 mb-4">Baixe os dados em formato Excel, CSV ou PDF</p>
            <button className="bg-white/20 px-4 py-2 rounded-lg hover:bg-white/30 transition-colors">
              Exportar
            </button>
          </div>

          <div className="bg-gradient-to-r from-purple-500 to-purple-600 rounded-2xl p-6 text-white hover-lift cursor-pointer">
            <h3 className="text-lg font-semibold mb-2">Configurações</h3>
            <p className="text-white/90 mb-4">Personalize campos e notificações</p>
            <button 
              onClick={() => onNavigate('settings')}
              className="bg-white/20 px-4 py-2 rounded-lg hover:bg-white/30 transition-colors"
            >
              Configurar
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Dashboard;
